{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Alhilly/Desktop/dev-social-app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Alhilly/Desktop/dev-social-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Alhilly/Desktop/dev-social-app/client/src/components/pages/Snippets.js\";\nimport React from 'react';\nimport { Pre, LineNo } from './styles';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/nightOwl';\nimport './style.css';\nimport Moment from 'react-moment';\nimport uniqid from 'uniqid';\nimport TextErea from './TextErea';\nimport API from '../../utils/API';\n\nfunction Snippets(_x) {\n  return _Snippets.apply(this, arguments);\n}\n\nfunction _Snippets() {\n  _Snippets = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(props) {\n    var snippet_array, comment_array, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            snippet_array = [];\n            comment_array = [];\n            _context.next = 4;\n            return API.getLikes().then(function (result) {\n              return result.data;\n            });\n\n          case 4:\n            result = _context.sent;\n            props.snippets.forEach(function (snippet) {\n              var likeButton = [];\n              var found = false;\n              if (result.includes()) if (found) {\n                likeButton.push(React.createElement(\"button\", {\n                  key: uniqid(),\n                  style: {\n                    \"marginRight\": \"5px\"\n                  },\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: function onClick() {\n                    return props.likeThisSnippet(snippet._id);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 22\n                  },\n                  __self: this\n                }, \"Like\"));\n              } else {\n                likeButton.push(React.createElement(\"button\", {\n                  key: uniqid(),\n                  style: {\n                    \"marginRight\": \"5px\"\n                  },\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  onClick: function onClick() {\n                    return props.likeThisSnippet(snippet._id);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 25\n                  },\n                  __self: this\n                }, \"Like\"));\n              }\n              snippet.comments.forEach(function (comm) {\n                comment_array.push(React.createElement(\"li\", {\n                  key: uniqid(),\n                  className: \"media pull-left\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 30\n                  },\n                  __self: this\n                }, React.createElement(\"a\", {\n                  href: \"/\",\n                  className: \"pull-left\",\n                  style: {\n                    \"marginRight\": \"15px\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 31\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  src: comm.auth_pic,\n                  alt: \"\",\n                  className: \"img-circle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 32\n                  },\n                  __self: this\n                })), React.createElement(\"div\", {\n                  className: \"media-body\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 34\n                  },\n                  __self: this\n                }, React.createElement(\"strong\", {\n                  className: \"text-success pull-left\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 35\n                  },\n                  __self: this\n                }, comm.author_name), React.createElement(\"span\", {\n                  className: \"text-muted pull-right\",\n                  style: {\n                    \"float\": \"right\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 37\n                  },\n                  __self: this\n                }, React.createElement(\"small\", {\n                  className: \"text-muted\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 38\n                  },\n                  __self: this\n                }, React.createElement(Moment, {\n                  format: \"D, MMM YYYY, hh:mm a\",\n                  withTitle: true,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 39\n                  },\n                  __self: this\n                }, snippet.date))), React.createElement(\"p\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 44\n                  },\n                  __self: this\n                }, comm.body))));\n              });\n              snippet_array.push(React.createElement(\"div\", {\n                key: uniqid(),\n                className: \"row\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 52\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col-md-8\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53\n                },\n                __self: this\n              }, React.createElement(\"article\", {\n                className: \"media content-section\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"media-body\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 55\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"article-metadata\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 56\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                src: snippet.author.pic,\n                alt: \"alaa\",\n                className: \"rounded-circle post_prof_img\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57\n                },\n                __self: this\n              }), React.createElement(\"a\", {\n                className: \"mr-2\",\n                href: \"/\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 58\n                },\n                __self: this\n              }, snippet.author.name), React.createElement(\"small\", {\n                className: \"text-muted ml-2\",\n                style: {\n                  \"float\": \"right\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 59\n                },\n                __self: this\n              }, React.createElement(Moment, {\n                format: \"D, MMM YYYY, hh:mm a\",\n                withTitle: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 60\n                },\n                __self: this\n              }, snippet.date))), React.createElement(\"h2\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65\n                },\n                __self: this\n              }, React.createElement(\"a\", {\n                className: \"article-title\",\n                href: \"/\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65\n                },\n                __self: this\n              }, snippet.title)), React.createElement(\"p\", {\n                className: \"desc\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66\n                },\n                __self: this\n              }, snippet.desc), React.createElement(Highlight, Object.assign({}, defaultProps, {\n                theme: theme,\n                code: snippet.content,\n                language: \"jsx\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 69\n                },\n                __self: this\n              }), function (_ref) {\n                var className = _ref.className,\n                    style = _ref.style,\n                    tokens = _ref.tokens,\n                    getLineProps = _ref.getLineProps,\n                    getTokenProps = _ref.getTokenProps;\n                return React.createElement(Pre, {\n                  className: className,\n                  style: style,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 71\n                  },\n                  __self: this\n                }, tokens.map(function (line, i) {\n                  return React.createElement(\"div\", Object.assign({}, getLineProps({\n                    line: line,\n                    key: i\n                  }), {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 73\n                    },\n                    __self: this\n                  }), React.createElement(LineNo, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 74\n                    },\n                    __self: this\n                  }, i + 1), line.map(function (token, key) {\n                    return React.createElement(\"span\", Object.assign({}, getTokenProps({\n                      token: token,\n                      key: key\n                    }), {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 75\n                      },\n                      __self: this\n                    }));\n                  }));\n                }));\n              }), React.createElement(\"small\", {\n                className: \"text-muted md-3\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              }, \"written with : \", snippet.lang), React.createElement(\"small\", {\n                className: \"text-muted md-3\",\n                style: {\n                  \"float\": \"right\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }, \"This snippet helped \", snippet.likes.length, \" developers\"), React.createElement(\"hr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"text-center\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }, likeButton, React.createElement(\"button\", {\n                style: {\n                  \"marginLeft\": \"5px\"\n                },\n                type: \"button\",\n                className: \"btn btn-secondary sh-comm\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }, \"Comment\")), React.createElement(\"hr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"row bootstrap snippets comm\",\n                style: {\n                  \"display\": \"none\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col-md-12 col-md-offset-2 col-sm-12\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"comment-wrapper\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"panel panel-info\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 94\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"panel-heading\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95\n                },\n                __self: this\n              }, \"Comments\"), React.createElement(\"div\", {\n                className: \"panel-body\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98\n                },\n                __self: this\n              }, React.createElement(TextErea, {\n                snippet_id: snippet._id,\n                onClick: props.commentForThisSnippet,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"clearfix\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100\n                },\n                __self: this\n              }), React.createElement(\"hr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101\n                },\n                __self: this\n              }), React.createElement(\"ul\", {\n                className: \"media-list\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }, comment_array)))))))))));\n            });\n            return _context.abrupt(\"return\", React.createElement(\"div\", {\n              className: \"container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121\n              },\n              __self: this\n            }, snippet_array));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _Snippets.apply(this, arguments);\n}\n\nexport default Snippets;","map":{"version":3,"sources":["/Users/Alhilly/Desktop/dev-social-app/client/src/components/pages/Snippets.js"],"names":["React","Pre","LineNo","Highlight","defaultProps","theme","Moment","uniqid","TextErea","API","Snippets","props","snippet_array","comment_array","getLikes","then","result","data","snippets","forEach","snippet","likeButton","found","includes","push","likeThisSnippet","_id","comments","comm","auth_pic","author_name","date","body","author","pic","name","title","desc","content","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","lang","likes","length","commentForThisSnippet"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Pre, LineNo } from './styles'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\nimport './style.css'\nimport Moment from 'react-moment';\nimport uniqid from 'uniqid'\nimport TextErea from './TextErea'\nimport API from '../../utils/API';\n async function Snippets(props) {\n    let snippet_array = []\n    let comment_array = []\n    const result = await API.getLikes()\n                        .then(result=>{\n                            return result.data\n                        })\n    props.snippets.forEach(snippet=>{\n        let likeButton=[]\n        let found = false\n        if(result.includes())\n        if(found){\n            likeButton.push(<button key={uniqid()} style={{\"marginRight\":\"5px\"}}  type=\"button\" className=\"btn btn-primary\" onClick={()=>props.likeThisSnippet(snippet._id)}>Like</button>)\n\n        }else{\n            likeButton.push(<button key={uniqid()} style={{\"marginRight\":\"5px\"}}  type=\"button\" className=\"btn btn-secondary\" onClick={()=>props.likeThisSnippet(snippet._id)}>Like</button>)\n        }\n        snippet.comments.forEach(comm =>{\n            comment_array.push(\n                \n                <li key={uniqid()} className=\"media pull-left\">\n                <a href=\"/\" className=\"pull-left\" style={{\"marginRight\":\"15px\"}}>\n                    <img src={comm.auth_pic} alt=\"\" className=\"img-circle\"/>\n                </a>\n                <div className=\"media-body\">\n                <strong className=\"text-success pull-left\">{comm.author_name}</strong>\n    \n                    <span className=\"text-muted pull-right\" style={{\"float\":\"right\"}}>\n                        <small className=\"text-muted\">\n                        <Moment format=\"D, MMM YYYY, hh:mm a\" withTitle>\n                             {snippet.date}\n                        </Moment>\n                        </small>\n                    </span>\n                    <p>\n                        {comm.body}\n                    </p>\n                </div>\n            </li>\n            )\n        })\n        snippet_array.push(\n        <div key={uniqid()} className=\"row\">\n        <div className=\"col-md-8\">\n            <article className=\"media content-section\">\n                <div className=\"media-body\">\n                    <div className=\"article-metadata\">\n                        <img src={snippet.author.pic} alt={\"alaa\"} className=\"rounded-circle post_prof_img\" />\n                        <a className=\"mr-2\" href=\"/\">{snippet.author.name}</a>\n                        <small className=\"text-muted ml-2\" style={{\"float\":\"right\"}}>\n                        <Moment format=\"D, MMM YYYY, hh:mm a\" withTitle>\n                             {snippet.date}\n                        </Moment>\n                        </small>\n                    </div>\n                    <h2><a className=\"article-title\" href=\"/\">{snippet.title}</a></h2>\n                    <p className=\"desc\">\n                        {snippet.desc}\n                    </p>\n                    <Highlight {...defaultProps} theme={theme} code={snippet.content} language=\"jsx\">\n                        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                            <Pre className={className} style={style}>\n                                {tokens.map((line, i) => (\n                                    <div {...getLineProps({ line, key: i })}>\n                                        <LineNo>{i + 1}</LineNo>\n                                        {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n                                    </div>\n                                ))}\n                            </Pre>\n                        )}\n                    </Highlight>\n                    <small className=\"text-muted md-3\">written with : {snippet.lang}</small>\n                    <small className=\"text-muted md-3\" style={{\"float\":\"right\"}}>This snippet helped {snippet.likes.length} developers</small>\n                    <hr></hr>\n                    <div className=\"text-center\">\n                        {\n                            likeButton\n                        }\n                        <button style={{\"marginLeft\":\"5px\"}}  type=\"button\" className=\"btn btn-secondary sh-comm\">Comment</button>\n                    </div>\n                    <hr></hr>\n                    <div  className=\"row bootstrap snippets comm\" style={{\"display\":\"none\"}}>\n                    <div className=\"col-md-12 col-md-offset-2 col-sm-12\">\n                        <div className=\"comment-wrapper\">\n                            <div className=\"panel panel-info\">\n                                <div className=\"panel-heading\">\n                                    Comments\n                                </div>\n                                <div className=\"panel-body\">\n                                    <TextErea snippet_id={snippet._id} onClick={props.commentForThisSnippet}/>\n                                     <div className=\"clearfix\"></div>\n                                    <hr></hr>\n                                    <ul className=\"media-list\">\n                                        {comment_array}\n                                        \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                </div>\n            </div>\n                </div>\n                \n            </article>\n        </div>\n        </div>\n        )\n        \n    })\n    return (\n        <div className=\"container\">\n            \n             {snippet_array}\n            \n        </div>\n    )\n}\nexport default Snippets"]},"metadata":{},"sourceType":"module"}