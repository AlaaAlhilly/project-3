{"ast":null,"code":"import _classCallCheck from \"/Users/Alhilly/Desktop/dev-social-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alhilly/Desktop/dev-social-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alhilly/Desktop/dev-social-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/Alhilly/Desktop/dev-social-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alhilly/Desktop/dev-social-app/client/src/components/pages/Snippets.js\";\nimport React from 'react';\nimport { Pre, LineNo } from './styles';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/nightOwl';\nimport './style.css';\nimport Moment from 'react-moment';\nimport uniqid from 'uniqid';\nimport API from '../../utils/API';\n\nvar Snippets =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Snippets, _React$Component);\n\n  function Snippets(props) {\n    var _this;\n\n    _classCallCheck(this, Snippets);\n\n    _this.state = {\n      comment: \"\",\n      name: \"\"\n    };\n    _this.snippet_array = [];\n    thiscomment_array = [];\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Snippets, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.snippet_array);\n    }\n  }]);\n\n  return Snippets;\n}(React.Component());\n\nexport { Snippets as default };","map":{"version":3,"sources":["/Users/Alhilly/Desktop/dev-social-app/client/src/components/pages/Snippets.js"],"names":["React","Pre","LineNo","Highlight","defaultProps","theme","Moment","uniqid","API","Snippets","props","state","comment","name","snippet_array","thiscomment_array","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,UAA5B;AACA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;IACqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,UAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AAEPC,MAAAA,IAAI,EAAC;AAFE,KAAX;AAKA,UAAKC,aAAL,GAAqB,EAArB;AACAC,IAAAA,iBAAiB,GAAG,EAApB;AAPc;AAQjB;;;;6BAyHO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,KAAKD,aAFX,CADJ;AAOH;;;;EA1IiCd,KAAK,CAACgB,SAAN,E;;SAAjBP,Q","sourcesContent":["import React from 'react'\nimport { Pre, LineNo } from './styles'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\nimport './style.css'\nimport Moment from 'react-moment';\nimport uniqid from 'uniqid'\nimport API from '../../utils/API'\nexport default class Snippets extends React.Component() {\n    constructor(props){\n        this.state={\n            comment:\"\",\n            name:\"\"\n            \n        }\n        this.snippet_array = []\n        thiscomment_array = []\n    }\n    handleInputChange = (event)=>{\n        this.setState({\n            comment:event.target.value,\n            name:event.target.name\n        })\n    }\n    handleSumbit =(event) => {\n        event.preventDefault()\n        let comment_to_save = {\n            body:this.state.comment,\n            author_id:this.props.thisAuthor.okta_id,\n            snippet_id:name,\n            author_name:this.props.thisAuthor.name,\n            auth_pic:this.props.thisAuthor.pic\n          }\n          API.saveComment(comment_to_save)\n            .then(result=>{\n              if(result.data != null){\n                API.getSnippets()\n                        .then(res=>{\n                          this.setState({response:res.data})\n                        })\n              }\n            })\n    }\n    getElements=()=>{\n        this.props.snippets.forEach(snippet=>{\n            snippet.comments.forEach(comm =>{\n                this.comment_array.push(\n                    \n                    <li key={uniqid()} className=\"media pull-left\">\n                    <a href=\"/\" className=\"pull-left\" style={{\"marginRight\":\"15px\"}}>\n                        <img src={comm.auth_pic} alt=\"\" className=\"img-circle\"/>\n                    </a>\n                    <div className=\"media-body\">\n                    <strong className=\"text-success pull-left\">{comm.author_name}</strong>\n        \n                        <span className=\"text-muted pull-right\" style={{\"float\":\"right\"}}>\n                            <small className=\"text-muted\">\n                            <Moment format=\"D, MMM YYYY, hh:mm a\" withTitle>\n                                 {comm.date}\n                            </Moment>\n                            </small>\n                        </span>\n                        <p>\n                            {comm.body}\n                        </p>\n                    </div>\n                </li>\n                )\n            })\n            this.snippet_array.push(\n            <div key={uniqid()} className=\"row\">\n            <div className=\"col-md-8\">\n                <article className=\"media content-section\">\n                    <div className=\"media-body\">\n                        <div className=\"article-metadata\">\n                            <img src={snippet.author.pic} alt={\"alaa\"} className=\"rounded-circle post_prof_img\" />\n                            <a className=\"mr-2\" href=\"/\">{snippet.author.name}</a>\n                            <small className=\"text-muted ml-2\" style={{\"float\":\"right\"}}>\n                            <Moment format=\"D, MMM YYYY, hh:mm a\" withTitle>\n                                 {snippet.date}\n                            </Moment>\n                            </small>\n                        </div>\n                        <h2><a className=\"article-title\" href=\"/\">{snippet.title}</a></h2>\n                        <p className=\"desc\">\n                            {snippet.desc}\n                        </p>\n                        <Highlight {...defaultProps} theme={theme} code={snippet.content} language=\"jsx\">\n                            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                                <Pre className={className} style={style}>\n                                    {tokens.map((line, i) => (\n                                        <div {...getLineProps({ line, key: i })}>\n                                            <LineNo>{i + 1}</LineNo>\n                                            {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n                                        </div>\n                                    ))}\n                                </Pre>\n                            )}\n                        </Highlight>\n                        <small className=\"text-muted md-3\">written with : {snippet.lang}</small>\n                        <small className=\"text-muted md-3\" style={{\"float\":\"right\"}}>This snippet helped {snippet.likes.length} developers</small>\n                        <hr></hr>\n                        <div className=\"text-center\">\n                            <button style={{\"marginRight\":\"5px\"}}  type=\"button\" className=\"btn btn-secondary\" onClick={()=>this.props.likeThisSnippet(snippet._id)}>Like</button>\n                            <button style={{\"marginLeft\":\"5px\"}}  type=\"button\" className=\"btn btn-secondary sh-comm\">Comment</button>\n                        </div>\n                        <hr></hr>\n                        <div  className=\"row bootstrap snippets comm\" style={{\"display\":\"none\"}}>\n                        <div className=\"col-md-12 col-md-offset-2 col-sm-12\">\n                            <div className=\"comment-wrapper\">\n                                <div className=\"panel panel-info\">\n                                    <div className=\"panel-heading\">\n                                        Comments\n                                    </div>\n                                    <div className=\"panel-body\">\n                                        <textarea name={snippet._id} className=\"form-control\" placeholder=\"write a comment...\" rows=\"3\" onChange={this.handleInputChange}></textarea>\n                                        <br></br>\n                                        <button type=\"button\" className=\"btn btn-info pull-right\" onClick={()=>this.handleSumbit()}>Post</button>\n                                        <div className=\"clearfix\"></div>\n                                        <hr></hr>\n                                        <ul className=\"media-list\">\n                                            {this.comment_array}\n                                            \n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n    \n                    </div>\n                </div>\n                    </div>\n                    \n                </article>\n            </div>\n            </div>\n            )\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n                \n                 {this.snippet_array}\n                \n            </div>\n        )\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}