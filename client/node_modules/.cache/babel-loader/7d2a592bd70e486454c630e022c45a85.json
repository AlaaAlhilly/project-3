{"ast":null,"code":"var _jsxFileName = \"/Users/Alhilly/Desktop/dev-social-app/client/src/components/pages/Snippets.js\";\nimport React from 'react';\nimport { Pre, LineNo } from './styles';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/nightOwl';\nimport './style.css';\nimport Moment from 'react-moment';\nimport uniqid from 'uniqid';\nimport TextErea from './TextErea';\nimport API from '../../utils/API';\nvar result = [];\nvar user_obj = JSON.parse(localStorage.getItem('okta-token-storage'));\nvar likeButton = [];\n\nfunction getLikes() {\n  var snippets_liked_by_this_user = [];\n  var promise1 = new Promise(function (resolve, reject) {\n    API.getLikes().then(function (result) {\n      resolve(result.data);\n    });\n  });\n  promise1.then(function (value) {\n    likeButton = [];\n    result = value;\n    console.log(\"lll\");\n    result.forEach(function (el) {\n      if (el.author_id === user_obj.idToken.clientId) {\n        snippets_liked_by_this_user.push(el.snippet_id);\n      }\n    });\n\n    if (found) {\n      likeButton.push(React.createElement(\"button\", {\n        key: uniqid(),\n        style: {\n          \"marginRight\": \"5px\"\n        },\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return props.likeThisSnippet(snippet._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Like\"));\n    } else {\n      likeButton.push(React.createElement(\"button\", {\n        key: uniqid(),\n        style: {\n          \"marginRight\": \"5px\"\n        },\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: function onClick() {\n          return props.likeThisSnippet(snippet._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Like\"));\n    }\n  });\n}\n\nfunction Snippets(props) {\n  console.log(props.thisAuthor);\n  var snippet_array = [];\n  props.snippets.forEach(function (snippet) {\n    var comment_array = [];\n\n    if (getLikes().includes(snippet._id)) {\n      found = true;\n    }\n\n    snippet.comments.forEach(function (comm) {\n      comment_array.push(React.createElement(\"li\", {\n        key: uniqid(),\n        className: \"media pull-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        className: \"pull-left\",\n        style: {\n          \"marginRight\": \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: comm.auth_pic,\n        alt: \"\",\n        className: \"img-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-success pull-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, comm.author_name), React.createElement(\"span\", {\n        className: \"text-muted pull-right\",\n        style: {\n          \"float\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"D, MMM YYYY, hh:mm a\",\n        withTitle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, snippet.date))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, comm.body))));\n    });\n    snippet_array.push(React.createElement(\"div\", {\n      key: uniqid(),\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"media content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article-metadata\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: snippet.author.pic,\n      alt: \"alaa\",\n      className: \"rounded-circle post_prof_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"mr-2\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, snippet.author.name), React.createElement(\"small\", {\n      className: \"text-muted ml-2\",\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"D, MMM YYYY, hh:mm a\",\n      withTitle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, snippet.date))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"article-title\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, snippet.title)), React.createElement(\"p\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, snippet.desc), React.createElement(Highlight, Object.assign({}, defaultProps, {\n      theme: theme,\n      code: snippet.content,\n      language: \"jsx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), function (_ref) {\n      var className = _ref.className,\n          style = _ref.style,\n          tokens = _ref.tokens,\n          getLineProps = _ref.getLineProps,\n          getTokenProps = _ref.getTokenProps;\n      return React.createElement(Pre, {\n        className: className,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, tokens.map(function (line, i) {\n        return React.createElement(\"div\", Object.assign({}, getLineProps({\n          line: line,\n          key: i\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(LineNo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, i + 1), line.map(function (token, key) {\n          return React.createElement(\"span\", Object.assign({}, getTokenProps({\n            token: token,\n            key: key\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }));\n        }));\n      }));\n    }), React.createElement(\"small\", {\n      className: \"text-muted md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"written with : \", snippet.lang), React.createElement(\"small\", {\n      className: \"text-muted md-3\",\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"This snippet helped \", snippet.likes.length, \" developers\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, likeButton, React.createElement(\"button\", {\n      style: {\n        \"marginLeft\": \"5px\"\n      },\n      type: \"button\",\n      className: \"btn btn-secondary sh-comm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Comment\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row bootstrap snippets comm\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 col-md-offset-2 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(TextErea, {\n      snippet_id: snippet._id,\n      onClick: props.commentForThisSnippet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"media-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, comment_array)))))))))));\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, snippet_array);\n}\n\nexport default Snippets;","map":{"version":3,"sources":["/Users/Alhilly/Desktop/dev-social-app/client/src/components/pages/Snippets.js"],"names":["React","Pre","LineNo","Highlight","defaultProps","theme","Moment","uniqid","TextErea","API","result","user_obj","JSON","parse","localStorage","getItem","likeButton","getLikes","snippets_liked_by_this_user","promise1","Promise","resolve","reject","then","data","value","console","log","forEach","el","author_id","idToken","clientId","push","snippet_id","found","props","likeThisSnippet","snippet","_id","Snippets","thisAuthor","snippet_array","snippets","comment_array","includes","comments","comm","auth_pic","author_name","date","body","author","pic","name","title","desc","content","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","lang","likes","length","commentForThisSnippet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,UAA5B;AACA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAX,CAAf;AACA,IAAIC,UAAU,GAAG,EAAjB;;AACA,SAASC,QAAT,GAAmB;AACf,MAAIC,2BAA2B,GAAC,EAAhC;AACA,MAAIC,QAAQ,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAEjDb,IAAAA,GAAG,CAACQ,QAAJ,GACCM,IADD,CACM,UAAAb,MAAM,EAAE;AACVW,MAAAA,OAAO,CAACX,MAAM,CAACc,IAAR,CAAP;AACP,KAHG;AAKL,GAPgB,CAAf;AASFL,EAAAA,QAAQ,CAACI,IAAT,CAAc,UAASE,KAAT,EAAgB;AAC1BT,IAAAA,UAAU,GAAC,EAAX;AACFN,IAAAA,MAAM,GAAGe,KAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAjB,IAAAA,MAAM,CAACkB,OAAP,CAAe,UAAAC,EAAE,EAAE;AACf,UAAGA,EAAE,CAACC,SAAH,KAAiBnB,QAAQ,CAACoB,OAAT,CAAiBC,QAArC,EAA8C;AAC1Cd,QAAAA,2BAA2B,CAACe,IAA5B,CAAiCJ,EAAE,CAACK,UAApC;AACH;AACF,KAJH;;AAKE,QAAGC,KAAH,EAAS;AACPnB,MAAAA,UAAU,CAACiB,IAAX,CAAgB;AAAQ,QAAA,GAAG,EAAE1B,MAAM,EAAnB;AAAuB,QAAA,KAAK,EAAE;AAAC,yBAAc;AAAf,SAA9B;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAoE,QAAA,SAAS,EAAC,iBAA9E;AAAgG,QAAA,OAAO,EAAE;AAAA,iBAAI6B,KAAK,CAACC,eAAN,CAAsBC,OAAO,CAACC,GAA9B,CAAJ;AAAA,SAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAEH,KAHC,MAGG;AACDvB,MAAAA,UAAU,CAACiB,IAAX,CAAgB;AAAQ,QAAA,GAAG,EAAE1B,MAAM,EAAnB;AAAuB,QAAA,KAAK,EAAE;AAAC,yBAAc;AAAf,SAA9B;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAoE,QAAA,SAAS,EAAC,mBAA9E;AAAkG,QAAA,OAAO,EAAE;AAAA,iBAAI6B,KAAK,CAACC,eAAN,CAAsBC,OAAO,CAACC,GAA9B,CAAJ;AAAA,SAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACH;AACF,GAfD;AAiBD;;AAGD,SAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AACrBV,EAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACK,UAAlB;AACA,MAAIC,aAAa,GAAG,EAApB;AACIN,EAAAA,KAAK,CAACO,QAAN,CAAef,OAAf,CAAuB,UAAAU,OAAO,EAAE;AAChC,QAAIM,aAAa,GAAG,EAApB;;AAEA,QAAG3B,QAAQ,GAAG4B,QAAX,CAAoBP,OAAO,CAACC,GAA5B,CAAH,EAAoC;AAChCJ,MAAAA,KAAK,GAAG,IAAR;AACH;;AAEDG,IAAAA,OAAO,CAACQ,QAAR,CAAiBlB,OAAjB,CAAyB,UAAAmB,IAAI,EAAG;AAC5BH,MAAAA,aAAa,CAACX,IAAd,CAEI;AAAI,QAAA,GAAG,EAAE1B,MAAM,EAAf;AAAmB,QAAA,SAAS,EAAC,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAkC,QAAA,KAAK,EAAE;AAAC,yBAAc;AAAf,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEwC,IAAI,CAACC,QAAf;AAAyB,QAAA,GAAG,EAAC,EAA7B;AAAgC,QAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA,EAIA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CD,IAAI,CAACE,WAAjD,CADA,EAGI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAwC,QAAA,KAAK,EAAE;AAAC,mBAAQ;AAAT,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,sBAAf;AAAsC,QAAA,SAAS,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMX,OAAO,CAACY,IADd,CADA,CADJ,CAHJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,IAAI,CAACI,IADV,CAVJ,CAJA,CAFJ;AAsBH,KAvBD;AAwBAT,IAAAA,aAAa,CAACT,IAAd,CACA;AAAK,MAAA,GAAG,EAAE1B,MAAM,EAAhB;AAAoB,MAAA,SAAS,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE+B,OAAO,CAACc,MAAR,CAAeC,GAAzB;AAA8B,MAAA,GAAG,EAAE,MAAnC;AAA2C,MAAA,SAAS,EAAC,8BAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8Bf,OAAO,CAACc,MAAR,CAAeE,IAA7C,CAFJ,EAGI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,KAAK,EAAE;AAAC,iBAAQ;AAAT,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,sBAAf;AAAsC,MAAA,SAAS,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMhB,OAAO,CAACY,IADd,CADA,CAHJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,IAAI,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCZ,OAAO,CAACiB,KAA/C,CAAJ,CAVJ,EAWI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKjB,OAAO,CAACkB,IADb,CAXJ,EAcI,oBAAC,SAAD,oBAAepD,YAAf;AAA6B,MAAA,KAAK,EAAEC,KAApC;AAA2C,MAAA,IAAI,EAAEiC,OAAO,CAACmB,OAAzD;AAAkE,MAAA,QAAQ,EAAC,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACK;AAAA,UAAGC,SAAH,QAAGA,SAAH;AAAA,UAAcC,KAAd,QAAcA,KAAd;AAAA,UAAqBC,MAArB,QAAqBA,MAArB;AAAA,UAA6BC,YAA7B,QAA6BA,YAA7B;AAAA,UAA2CC,aAA3C,QAA2CA,aAA3C;AAAA,aACG,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAEJ,SAAhB;AAA2B,QAAA,KAAK,EAAEC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;AAAA,eACR,6CAASJ,YAAY,CAAC;AAAEG,UAAAA,IAAI,EAAJA,IAAF;AAAQE,UAAAA,GAAG,EAAED;AAAb,SAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASA,CAAC,GAAG,CAAb,CADJ,EAEKD,IAAI,CAACD,GAAL,CAAS,UAACI,KAAD,EAAQD,GAAR;AAAA,iBAAgB,8CAAUJ,aAAa,CAAC;AAAEK,YAAAA,KAAK,EAALA,KAAF;AAASD,YAAAA,GAAG,EAAHA;AAAT,WAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhB;AAAA,SAAT,CAFL,CADQ;AAAA,OAAX,CADL,CADH;AAAA,KADL,CAdJ,EA0BI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmD5B,OAAO,CAAC8B,IAA3D,CA1BJ,EA2BI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,KAAK,EAAE;AAAC,iBAAQ;AAAT,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkF9B,OAAO,CAAC+B,KAAR,CAAcC,MAAhG,gBA3BJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,EA6BI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQtD,UAFR,EAII;AAAQ,MAAA,KAAK,EAAE;AAAC,sBAAa;AAAd,OAAf;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAoD,MAAA,SAAS,EAAC,2BAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CA7BJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCJ,EAoCI;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAA8C,MAAA,KAAK,EAAE;AAAC,mBAAU;AAAX,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEsB,OAAO,CAACC,GAA9B;AAAmC,MAAA,OAAO,EAAEH,KAAK,CAACmC,qBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK3B,aADL,CAJJ,CAJJ,CADJ,CADJ,CADA,CApCJ,CADJ,CADJ,CADA,CADA;AAoEH,GAnGG;AAoGJ,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMF,aAFN,CADJ;AAOH;;AACD,eAAeF,QAAf","sourcesContent":["import React from 'react'\nimport { Pre, LineNo } from './styles'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\nimport './style.css'\nimport Moment from 'react-moment';\nimport uniqid from 'uniqid'\nimport TextErea from './TextErea'\nimport API from '../../utils/API';\nlet result = []\nlet user_obj = JSON.parse(localStorage.getItem('okta-token-storage'))\nlet likeButton = []\nfunction getLikes(){\n    let snippets_liked_by_this_user=[]\n    var promise1 = new Promise(function(resolve, reject) {\n\n        API.getLikes()\n        .then(result=>{\n            resolve(result.data);\n    })\n      \n  });\n  \n  promise1.then(function(value) {\n      likeButton=[]\n    result = value\n    console.log(\"lll\")\n    result.forEach(el=>{\n        if(el.author_id === user_obj.idToken.clientId){\n            snippets_liked_by_this_user.push(el.snippet_id)\n        }\n      })\n      if(found){\n        likeButton.push(<button key={uniqid()} style={{\"marginRight\":\"5px\"}}  type=\"button\" className=\"btn btn-primary\" onClick={()=>props.likeThisSnippet(snippet._id)}>Like</button>)\n\n    }else{\n        likeButton.push(<button key={uniqid()} style={{\"marginRight\":\"5px\"}}  type=\"button\" className=\"btn btn-secondary\" onClick={()=>props.likeThisSnippet(snippet._id)}>Like</button>)\n    }\n  });\n  \n}\n\n  \nfunction Snippets(props) {\n    console.log(props.thisAuthor)\n    let snippet_array = []\n        props.snippets.forEach(snippet=>{\n        let comment_array = []\n        \n        if(getLikes().includes(snippet._id)){\n            found = true\n        }\n        \n        snippet.comments.forEach(comm =>{\n            comment_array.push(\n                \n                <li key={uniqid()} className=\"media pull-left\">\n                <a href=\"/\" className=\"pull-left\" style={{\"marginRight\":\"15px\"}}>\n                    <img src={comm.auth_pic} alt=\"\" className=\"img-circle\"/>\n                </a>\n                <div className=\"media-body\">\n                <strong className=\"text-success pull-left\">{comm.author_name}</strong>\n    \n                    <span className=\"text-muted pull-right\" style={{\"float\":\"right\"}}>\n                        <small className=\"text-muted\">\n                        <Moment format=\"D, MMM YYYY, hh:mm a\" withTitle>\n                             {snippet.date}\n                        </Moment>\n                        </small>\n                    </span>\n                    <p>\n                        {comm.body}\n                    </p>\n                </div>\n            </li>\n            )\n        })\n        snippet_array.push(\n        <div key={uniqid()} className=\"row\">\n        <div className=\"col-md-8\">\n            <article className=\"media content-section\">\n                <div className=\"media-body\">\n                    <div className=\"article-metadata\">\n                        <img src={snippet.author.pic} alt={\"alaa\"} className=\"rounded-circle post_prof_img\" />\n                        <a className=\"mr-2\" href=\"/\">{snippet.author.name}</a>\n                        <small className=\"text-muted ml-2\" style={{\"float\":\"right\"}}>\n                        <Moment format=\"D, MMM YYYY, hh:mm a\" withTitle>\n                             {snippet.date}\n                        </Moment>\n                        </small>\n                    </div>\n                    <h2><a className=\"article-title\" href=\"/\">{snippet.title}</a></h2>\n                    <p className=\"desc\">\n                        {snippet.desc}\n                    </p>\n                    <Highlight {...defaultProps} theme={theme} code={snippet.content} language=\"jsx\">\n                        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                            <Pre className={className} style={style}>\n                                {tokens.map((line, i) => (\n                                    <div {...getLineProps({ line, key: i })}>\n                                        <LineNo>{i + 1}</LineNo>\n                                        {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n                                    </div>\n                                ))}\n                            </Pre>\n                        )}\n                    </Highlight>\n                    <small className=\"text-muted md-3\">written with : {snippet.lang}</small>\n                    <small className=\"text-muted md-3\" style={{\"float\":\"right\"}}>This snippet helped {snippet.likes.length} developers</small>\n                    <hr></hr>\n                    <div className=\"text-center\">\n                        {\n                            likeButton\n                        }\n                        <button style={{\"marginLeft\":\"5px\"}}  type=\"button\" className=\"btn btn-secondary sh-comm\">Comment</button>\n                    </div>\n                    <hr></hr>\n                    <div  className=\"row bootstrap snippets comm\" style={{\"display\":\"none\"}}>\n                    <div className=\"col-md-12 col-md-offset-2 col-sm-12\">\n                        <div className=\"comment-wrapper\">\n                            <div className=\"panel panel-info\">\n                                <div className=\"panel-heading\">\n                                    Comments\n                                </div>\n                                <div className=\"panel-body\">\n                                    <TextErea snippet_id={snippet._id} onClick={props.commentForThisSnippet}/>\n                                     <div className=\"clearfix\"></div>\n                                    <hr></hr>\n                                    <ul className=\"media-list\">\n                                        {comment_array}\n                                        \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                </div>\n            </div>\n                </div>\n                \n            </article>\n        </div>\n        </div>\n        )\n        \n    })\n    return (\n        <div className=\"container\">\n            \n             {snippet_array}\n            \n        </div>\n    )\n}\nexport default Snippets"]},"metadata":{},"sourceType":"module"}